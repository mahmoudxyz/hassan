name: Nightly Maintenance

on:
  schedule:
    # Run every night at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  # Dependency updates check
  dependency-update:
    name: Check Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Check for outdated dependencies
        run: |
          npm outdated --json > outdated.json || true
          if [ -s outdated.json ]; then
            echo "OUTDATED_DEPS=true" >> $GITHUB_ENV
          fi

      - name: Create issue for outdated dependencies
        if: env.OUTDATED_DEPS == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const outdated = JSON.parse(fs.readFileSync('outdated.json', 'utf8'));

            if (Object.keys(outdated).length === 0) return;

            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['dependencies', 'automated'],
              state: 'open'
            });

            if (issues.length > 0) {
              console.log('Dependency update issue already exists');
              return;
            }

            let body = '## ðŸ“¦ Outdated Dependencies\n\n';
            body += 'The following dependencies have newer versions available:\n\n';
            body += '| Package | Current | Wanted | Latest |\n';
            body += '|---------|---------|--------|---------|\n';

            for (const [pkg, info] of Object.entries(outdated)) {
              body += `| ${pkg} | ${info.current} | ${info.wanted} | ${info.latest} |\n`;
            }

            body += '\n_This issue was created automatically by the nightly maintenance workflow._';

            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'ðŸ“¦ Dependency Updates Available',
              body: body,
              labels: ['dependencies', 'automated', 'maintenance']
            });

  # Performance benchmarks
  performance:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run benchmarks
        run: |
          # Add your benchmark command here if you have one
          # npm run benchmark
          echo "Benchmarks would run here"

      - name: Store benchmark results
        uses: benchmark-action/github-action-benchmark@v1
        if: false # Enable when you have benchmarks
        with:
          tool: 'benchmarkjs'
          output-file-path: benchmark-results.json
          github-token: ${{ secrets.GITHUB_TOKEN }}
          auto-push: true

  # Security scan
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
